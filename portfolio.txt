npx create-next-app @...
add assets folder, 
add fonts(outfit,ovo) in layout.js, 
in global.css import font
in app, create components
tailwind.config.js- add colors, fonts

navbar:
to close side bar: we use ref

const sideMenuRef=useRef()

const open=()=>{
.....}

const close=()=>{
.....}


to call: ref={sideMenuRef}

onclick={open}
onclick={close}

header:

nrml page with basic styling

about:
to get data frm assets.js: we use {  }, inside brackt we write: keyword.map(({....})=>(
					<li key={index}> ...
					{title},{description}..
create box shadow in tailwind.config

to make navbar stable at top:
we use state variables(to check for scroll) and useEffect for if else conditions to check scroll value
now we use dynamic declaration of classes and add extra styling if isScroll is true

services:

same create keyword.map....
in tailwind config, create grid template 


work:

same nrml page with fn to get data frm assets.js

contact:
to get color, we use bg image

create form for msg option and 
- to receive msg, we use web3form
- copy use state code frm reactjs web3form
-now, in form code, add onSubmit={onSubmit} and name=''(to get data to mail)

contactme:
nrml contact me code only

-dark mode:
first in tailwind.config: add darkMode:'selector' and in layout.js: add dark cls in html tag(we will not add directly)

in page.jsx:
- create useState and useEffect for dark mode:
if(darkMode){
	doc.docele.classlist.add('dark') //to make html page dark
	localStorage.theme='dark'
else: remove and make theme=''

-now before this useEffect, we create other useEffect to check whether sys is in dark mode or not and make setIsDarkMode()true or false

-now we pass isDarkMode parameter to navbar page and all pages.
- to get update dark mode, we need to pass setIsDarkMode to navbar page
- in navbar: use onClick in button image to change dark mode using  
onClick={()=> setIsDarkMode(prev=>!=prev)}.. and update all class colors for dark mode

-uses motion for motion in webpage
-motion.div/motion.h1....
- values we give is initial, whileInView and transition. 
























